name: Deploy Latest

on:
  workflow_dispatch:

jobs:
  build-latest-dx-npm:
    runs-on: ubuntu-latest
    steps:
      #Build Devextreme latest
      - name: Checkout Devextreme
        run: git clone https://github.com/DevExpress/DevExtreme.git devextreme

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18.16.1'

      - name: Set NPM version
        run: npm i npm@8 -g

      - name: DevExtreme - Restore npm cache
        uses: actions/cache@v3
        with:
          path: 'devextreme/**/node_modules'
          key: ${{ runner.os }}-node-modules-${{ hashFiles('devextreme/**/package-lock.json') }}

      - name: DevExtreme - Install packages
        working-directory: devextreme
        run: npm install --no-audit --no-fund

      - name: DevExtreme - Build
        working-directory: devextreme/packages/devextreme
        run: npm run build-npm-devextreme

      - name: DevExtreme - Pack
        working-directory: devextreme/packages/devextreme/artifacts/npm/devextreme
        run: npm pack

      - name: DevExtreme dist - Pack
        working-directory: devextreme/packages/devextreme/artifacts/npm/devextreme-dist
        run: npm pack

      - name: Upload devextreme Artifact
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: devextreme-npm
          path: |
            devextreme/packages/devextreme/artifacts/npm/devextreme/devextreme-*.tgz
            devextreme/packages/devextreme/artifacts/npm/devextreme-dist/devextreme-dist*.tgz

      - name: DevExtreme-angular - Build
        working-directory: devextreme/packages/devextreme-angular
        run: npm run build

      - name: DevExtreme-angular - Pack
        working-directory: devextreme/packages/devextreme-angular
        run: npm run pack

      - name: Upload devextreme-angular Artifact
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: devextreme-angular-npm
          path: devextreme/packages/devextreme-angular/npm/dist/devextreme-angular*.tgz

      - name: DevExtreme-react - Pack
        working-directory: devextreme/packages/devextreme-react
        run: npm run pack

      - name: DevExtreme-react - Pack npm
        working-directory: devextreme/packages/devextreme-react/npm
        run: npm pack

      - name: Upload devextreme-react Artifact
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: devextreme-react-npm
          path: devextreme/packages/devextreme-react/npm/devextreme-react*.tgz

      - name: DevExtreme-vue - Pack
        working-directory: devextreme/packages/devextreme-vue
        run: npm run pack

      - name: DevExtreme-vue - Pack npm
        working-directory: devextreme/packages/devextreme-vue/npm
        run: npm pack

      - name: Upload devextreme-vue Artifact
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: devextreme-vue-npm
          path: devextreme/packages/devextreme-vue/npm/devextreme-vue*.tgz

  set-matrix:
    needs: [build-latest-dx-npm]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Set themes matrix
        id: set-matrix
        run: |
          themes_json=`cat ./packages/metadata/themes.json`
          themes_json="${themes_json//$'\n'/''}"
          themes_json="${themes_json//$'\r'/''}"
          themes_json="${themes_json//$' '/''}"
          echo "matrix=$themes_json" >> $GITHUB_OUTPUT

  build:
    needs: [set-matrix]
    name: Build applications
    runs-on: ubuntu-latest
    env:
      CI: false
    strategy:
      matrix:
        theme: ${{fromJson(needs.set-matrix.outputs.matrix)}}
        mode: [ default ]

    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set NPM version
        run: npm i npm@7 -g

      - name: For dev branch - download devextreme Artifact
        uses: actions/download-artifact@v3
        with:
          name: devextreme-npm
          path: devextreme-npm-latest

      - name: For dev branch - download devextreme-angular Artifact
        uses: actions/download-artifact@v3
        with:
          name: devextreme-angular-npm
          path: devextreme-angular-npm-latest

      - name: For dev branch - download devextreme-react Artifact
        uses: actions/download-artifact@v3
        with:
          name: devextreme-react-npm
          path: devextreme-react-npm-latest

      - name: For dev branch - download devextreme-vue Artifact
        uses: actions/download-artifact@v3
        with:
          name: devextreme-vue-npm
          path: devextreme-vue-npm-latest

      - name: For dev branch - replace dx versions to latest builds in package.json
        run: |
          FILE_ANGULAR_PATH="$(find devextreme-angular-npm-latest -maxdepth 1 -name "devextreme-angular*.tgz" | sed 's|/|\\/|g')"
          FILE_DX_PATH="$(find devextreme-npm-latest/devextreme/ -maxdepth 1 -name "devextreme-*.tgz" | sed 's|/|\\/|g')"
          FILE_DX_DIST_PATH="$(find devextreme-npm-latest/devextreme-dist/ -maxdepth 1 -name "devextreme-dist*.tgz" | sed 's|/|\\/|g')"
          sed -i "s|\"devextreme\": \"[0-9.\\-a-z]\+\"|\"devextreme\": \"\.\.\/\.\.\/$FILE_DX_PATH\"|g" ./packages/angular/package.json
          sed -i "s/\"devextreme-dist\": \"[0-9.\\-a-z]\+\"/\"devextreme-dist\": \"\.\.\/\.\.\/$FILE_DX_DIST_PATH\"/g" ./packages/angular/package.json
          sed -i "s|\"devextreme-angular\": \"[0-9.\\-a-z]\+\"|\"devextreme-angular\": \"\.\.\/\.\.\/$FILE_ANGULAR_PATH\"|g" ./packages/angular/package.json

      - name: Print FILE_ANGULAR_PATH
        run: echo $FILE_ANGULAR_PATH

      - name: Print updated package.json
        run: cat ./packages/angular/package.json

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run npm install
        run: npm install

      - name: Set theme
        run: npm run set-theme -- ${{ matrix.theme }}

      - name: Set mode
        if: ${{ matrix.mode == 'embedded' }}
        run: npm run make-embedded-mode

      - name: Build
        run: npm run build

      - name: Copy apps
        run: npm run copy-build -- ${{ matrix.mode }} ${{ matrix.theme }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: devextreme-ui-template-gallery/

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: devextreme-ui-template-gallery

      - name: Deploy in gh-pages
        uses: JamesIves/github-pages-deploy-action@ba1486788b0490a235422264426c45848eac35c6
        with:
          branch: gh-pages
          folder: devextreme-ui-template-gallery
          target-folder: ./latest

